// Automatically generated header file

#pragma once

/*
===== HLSL Source =====
sampler2D inputTexture : register(s0);
sampler1D gammaRampTexture : register(s1);

float4 main(float2 texCoord : TEXCOORD0) : COLOR0 {
    float4 color = tex2D(inputTexture, texCoord);

    // Apply per-channel gamma correction using the ramp texture
    color.r = tex1D(gammaRampTexture, color.r).r;
    color.g = tex1D(gammaRampTexture, color.g).g;
    color.b = tex1D(gammaRampTexture, color.b).b;

    return color;
}

technique GammaCorrection {
    pass P0 {
        PixelShader = compile ps_2_0 main();
    }
}
=======================
*/

const unsigned char GammaPixelShaderSrc[] = {
0x0, 0x2, 0xff, 0xff, 0xfe, 0xff, 0x31, 0x0, 0x43, 0x54, 0x41, 0x42, 0x1c, 0x0, 0x0, 0x0, 
0x8f, 0x0, 0x0, 0x0, 0x0, 0x2, 0xff, 0xff, 0x2, 0x0, 0x0, 0x0, 0x1c, 0x0, 0x0, 0x0, 
0x0, 0x1, 0x0, 0x0, 0x88, 0x0, 0x0, 0x0, 0x44, 0x0, 0x0, 0x0, 0x3, 0x0, 0x1, 0x0, 
0x1, 0x0, 0x6, 0x0, 0x58, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0x0, 0x0, 0x0, 
0x3, 0x0, 0x0, 0x0, 0x1, 0x0, 0x2, 0x0, 0x78, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
0x67, 0x61, 0x6d, 0x6d, 0x61, 0x52, 0x61, 0x6d, 0x70, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 
0x0, 0xab, 0xab, 0xab, 0x4, 0x0, 0xb, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 
0x0, 0xab, 0xab, 0xab, 0x4, 0x0, 0xc, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 0x70, 0x73, 0x5f, 0x32, 0x5f, 0x30, 0x0, 0x4d, 0x69, 0x63, 0x72, 0x6f, 
0x73, 0x6f, 0x66, 0x74, 0x20, 0x28, 0x52, 0x29, 0x20, 0x48, 0x4c, 0x53, 0x4c, 0x20, 0x53, 0x68, 
0x61, 0x64, 0x65, 0x72, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x20, 0x39, 0x2e, 
0x32, 0x39, 0x2e, 0x39, 0x35, 0x32, 0x2e, 0x33, 0x31, 0x31, 0x31, 0x0, 0x1f, 0x0, 0x0, 0x2, 
0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x3, 0xb0, 0x1f, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x90, 
0x0, 0x8, 0xf, 0xa0, 0x1f, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x90, 0x1, 0x8, 0xf, 0xa0, 
0x42, 0x0, 0x0, 0x3, 0x0, 0x0, 0xf, 0x80, 0x0, 0x0, 0xe4, 0xb0, 0x0, 0x8, 0xe4, 0xa0, 
0x1, 0x0, 0x0, 0x2, 0x1, 0x0, 0x3, 0x80, 0x0, 0x0, 0x0, 0x80, 0x1, 0x0, 0x0, 0x2, 
0x0, 0x0, 0x3, 0x80, 0x0, 0x0, 0x55, 0x80, 0x1, 0x0, 0x0, 0x2, 0x2, 0x0, 0x3, 0x80, 
0x0, 0x0, 0xaa, 0x80, 0x42, 0x0, 0x0, 0x3, 0x1, 0x0, 0xf, 0x80, 0x1, 0x0, 0xe4, 0x80, 
0x1, 0x8, 0xe4, 0xa0, 0x42, 0x0, 0x0, 0x3, 0x3, 0x0, 0xf, 0x80, 0x0, 0x0, 0xe4, 0x80, 
0x1, 0x8, 0xe4, 0xa0, 0x42, 0x0, 0x0, 0x3, 0x2, 0x0, 0xf, 0x80, 0x2, 0x0, 0xe4, 0x80, 
0x1, 0x8, 0xe4, 0xa0, 0x1, 0x0, 0x0, 0x2, 0x2, 0x0, 0x1, 0x80, 0x1, 0x0, 0x0, 0x80, 
0x1, 0x0, 0x0, 0x2, 0x2, 0x0, 0x2, 0x80, 0x3, 0x0, 0x55, 0x80, 0x1, 0x0, 0x0, 0x2, 
0x2, 0x0, 0x8, 0x80, 0x0, 0x0, 0xff, 0x80, 0x1, 0x0, 0x0, 0x2, 0x0, 0x8, 0xf, 0x80, 
0x2, 0x0, 0xe4, 0x80, 0xff, 0xff, 0x0, 0x0
};
