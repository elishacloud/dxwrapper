// Automatically generated header file

#pragma once

/*
===== HLSL Source =====
sampler2D SurfaceTex : register(s0);
sampler2D PaletteTex : register(s1); // 256x1 palette texture

float4 main(float2 texCoords : TEXCOORD) : COLOR
{
    // Assume input is normalized index in [0,1], map to texel center
    float index = tex2D(SurfaceTex, texCoords).r * 255.0;
    float2 paletteUV = float2((index + 0.5) / 256.0, 0.0);
    return tex2D(PaletteTex, paletteUV);
}
=======================
*/

const unsigned char PalettePixelShaderSrc[] = {
0x0, 0x2, 0xff, 0xff, 0xfe, 0xff, 0x2e, 0x0, 0x43, 0x54, 0x41, 0x42, 0x1c, 0x0, 0x0, 0x0, 
0x83, 0x0, 0x0, 0x0, 0x0, 0x2, 0xff, 0xff, 0x2, 0x0, 0x0, 0x0, 0x1c, 0x0, 0x0, 0x0, 
0x0, 0x1, 0x0, 0x0, 0x7c, 0x0, 0x0, 0x0, 0x44, 0x0, 0x0, 0x0, 0x3, 0x0, 0x1, 0x0, 
0x1, 0x0, 0x6, 0x0, 0x50, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, 0x0, 
0x3, 0x0, 0x0, 0x0, 0x1, 0x0, 0x2, 0x0, 0x6c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
0x50, 0x61, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x54, 0x65, 0x78, 0x0, 0xab, 0x4, 0x0, 0xc, 0x0, 
0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x53, 0x75, 0x72, 0x66, 
0x61, 0x63, 0x65, 0x54, 0x65, 0x78, 0x0, 0xab, 0x4, 0x0, 0xc, 0x0, 0x1, 0x0, 0x1, 0x0, 
0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x73, 0x5f, 0x32, 0x5f, 0x30, 0x0, 0x4d, 
0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0x20, 0x28, 0x52, 0x29, 0x20, 0x48, 0x4c, 0x53, 
0x4c, 0x20, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 
0x72, 0x20, 0x39, 0x2e, 0x32, 0x39, 0x2e, 0x39, 0x35, 0x32, 0x2e, 0x33, 0x31, 0x31, 0x31, 0x0, 
0x51, 0x0, 0x0, 0x5, 0x0, 0x0, 0xf, 0xa0, 0x0, 0x0, 0x7f, 0x43, 0x0, 0x0, 0x0, 0x3f, 
0x0, 0x0, 0x80, 0x3b, 0x0, 0x0, 0x0, 0x0, 0x1f, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x80, 
0x0, 0x0, 0x3, 0xb0, 0x1f, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x90, 0x0, 0x8, 0xf, 0xa0, 
0x1f, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x90, 0x1, 0x8, 0xf, 0xa0, 0x42, 0x0, 0x0, 0x3, 
0x0, 0x0, 0xf, 0x80, 0x0, 0x0, 0xe4, 0xb0, 0x0, 0x8, 0xe4, 0xa0, 0x4, 0x0, 0x0, 0x4, 
0x0, 0x0, 0x1, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0xa0, 0x0, 0x0, 0x55, 0xa0, 
0x5, 0x0, 0x0, 0x3, 0x0, 0x0, 0x1, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0xaa, 0xa0, 
0x1, 0x0, 0x0, 0x2, 0x0, 0x0, 0x2, 0x80, 0x0, 0x0, 0xff, 0xa0, 0x42, 0x0, 0x0, 0x3, 
0x0, 0x0, 0xf, 0x80, 0x0, 0x0, 0xe4, 0x80, 0x1, 0x8, 0xe4, 0xa0, 0x1, 0x0, 0x0, 0x2, 
0x0, 0x8, 0xf, 0x80, 0x0, 0x0, 0xe4, 0x80, 0xff, 0xff, 0x0, 0x0
};
